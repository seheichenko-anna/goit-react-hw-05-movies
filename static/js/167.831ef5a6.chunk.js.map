{"version":3,"file":"static/js/167.831ef5a6.chunk.js","mappings":"qPAmBA,EAhBa,SAAHA,GAA6B,IAAvBC,EAAeD,EAAfC,gBACdC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAOhC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUH,GANH,SAAAI,GACbR,EAAgBQ,EAAKC,YAAc,CAAEC,MAAOF,EAAKC,aAAgB,CAAC,GAClEJ,GACF,IAGuCM,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWV,EAAS,gBAAc,IAAEW,KAAK,aACzCF,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAGd,E,kBCoBA,EA7Be,WACb,IAAAI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEjB,EAAeiB,EAAA,GAC9BP,EAAQS,EAAaC,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,MAAO,CAAEd,MAAAA,EACX,GAAG,CAACA,IACJe,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,GAAoBJ,GAAzCK,GAAqDV,EAAAA,EAAAA,GAAAO,EAAA,GAA/C,GAEb,OACEnB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAlB,SAAA,EACEC,EAAAA,EAAAA,KAACkB,EAAI,CAAC9B,gBAAiBA,IACtB4B,GACChB,EAAAA,EAAAA,KAAA,MAAAD,SACS,OAANiB,QAAM,IAANA,OAAM,EAANA,EAAQG,KAAI,SAAAC,GAAK,OAChBpB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMd,GAAYe,GAAIJ,EAAMK,GAAGC,WAAW3B,SACtDqB,EAAMO,SAFFP,EAAMK,GAIV,MAIT,KAIR,C","sources":["pages/Movies/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst Form = ({ setSearchParams }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const submit = data => {\n    setSearchParams(data.searchValue ? { query: data.searchValue } : {});\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <input {...register('searchValue')} type=\"search\" />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useMemo } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport Form from './Form';\n\nimport { fetchMoviesByQuery } from 'services/api';\nimport { useRequest } from 'hooks/useRequest';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query' || '');\n  const location = useLocation();\n  const queryParams = useMemo(() => {\n    return { query };\n  }, [query]);\n  const [movies] = useRequest(fetchMoviesByQuery, queryParams);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies ? (\n        <ul>\n          {movies?.map(movie => (\n            <li key={movie.id}>\n              <Link state={{ from: location }} to={movie.id.toString()}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","setSearchParams","_useForm","useForm","register","handleSubmit","reset","_jsxs","onSubmit","data","searchValue","query","children","_jsx","_objectSpread","type","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","get","location","useLocation","queryParams","useMemo","_useRequest","useRequest","fetchMoviesByQuery","movies","_Fragment","Form","map","movie","Link","state","from","to","id","toString","title"],"sourceRoot":""}